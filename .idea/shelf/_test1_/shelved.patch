Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"NullableNotNullManager\">\r\n    <option name=\"myDefaultNullable\" value=\"android.support.annotation.Nullable\" />\r\n    <option name=\"myDefaultNotNull\" value=\"android.support.annotation.NonNull\" />\r\n    <option name=\"myNullables\">\r\n      <value>\r\n        <list size=\"4\">\r\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.Nullable\" />\r\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nullable\" />\r\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.Nullable\" />\r\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.Nullable\" />\r\n        </list>\r\n      </value>\r\n    </option>\r\n    <option name=\"myNotNulls\">\r\n      <value>\r\n        <list size=\"4\">\r\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.NotNull\" />\r\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nonnull\" />\r\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.NonNull\" />\r\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.NonNull\" />\r\n        </list>\r\n      </value>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1528264846000)
+++ .idea/misc.xml	(date 1560964400526)
@@ -24,7 +24,7 @@
       </value>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/cara2v/ui/activity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cara2v.ui.activity;\r\n\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.support.annotation.NonNull;\r\nimport android.support.design.widget.CoordinatorLayout;\r\nimport android.support.design.widget.TabLayout;\r\nimport android.support.v4.app.Fragment;\r\nimport android.support.v4.app.FragmentManager;\r\nimport android.support.v4.app.FragmentTransaction;\r\nimport android.support.v4.view.ViewPager;\r\nimport android.support.v4.widget.DrawerLayout;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.cara2v.R;\r\nimport com.cara2v.chat.ChatFragment;\r\nimport com.cara2v.chat.ChatUserBean;\r\nimport com.cara2v.responceBean.SignInRespoce;\r\nimport com.cara2v.ui.fragments.FragmentFeed;\r\nimport com.cara2v.ui.fragments.FragmentNearby;\r\nimport com.cara2v.ui.fragments.FragmentNotifications;\r\nimport com.cara2v.ui.fragments.FragmentProfile;\r\nimport com.cara2v.ui.fragments.FragmentTermsPolicies;\r\nimport com.cara2v.ui.fragments.OnDevelopmentFragment;\r\nimport com.cara2v.ui.fragments.OnlineJobsNServicesFragment;\r\nimport com.cara2v.ui.fragments.consumer.FragmentMyServices;\r\nimport com.cara2v.ui.fragments.owner.FragmentAddEditAccount;\r\nimport com.cara2v.ui.fragments.owner.FragmentMyJobs;\r\nimport com.cara2v.ui.fragments.owner.FragmentPromoCode;\r\nimport com.cara2v.util.Constant;\r\nimport com.cara2v.util.PreferenceConnector;\r\nimport com.cara2v.util.ProgressDialog;\r\nimport com.cara2v.vollyemultipart.VolleySingleton;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.gson.Gson;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener {\r\n    private RelativeLayout contentView;\r\n    private LinearLayout navigationView, footer;\r\n    private DrawerLayout drawerLayout;\r\n    private ImageView menuBtn;\r\n    private final float END_SCALE = 0.7f;\r\n    private ViewPager viewPager;\r\n    private TabLayout tabLay;\r\n    private TextView titleTxt;\r\n    private CoordinatorLayout coOrdinateLay;\r\n\r\n    //tab\r\n    private RelativeLayout firstTabLay;\r\n    private ImageView firstTabImage;\r\n    private RelativeLayout secondTabLay;\r\n    private ImageView secondTabImage;\r\n    private RelativeLayout thirdTabLay;\r\n    private ImageView thirdTabImage;\r\n    private RelativeLayout fourthTabLay;\r\n    private ImageView fourthTabImage;\r\n    private RelativeLayout fifthTabLay;\r\n    private ImageView fifthTabImage;\r\n\r\n    private FrameLayout notiFrm;\r\n    private TextView notiTxt;\r\n\r\n    private View fstTbVw;\r\n    private View ndTbVw;\r\n    private View rdTbVw;\r\n    private View frthTbVw;\r\n    private View fifthTbVw;\r\n    //Slide\r\n    private TextView fstSlTab;\r\n    private TextView sndSlTab;\r\n    private TextView rdSlTab;\r\n    private TextView frthSlTab;\r\n    private TextView fifthSlTab;\r\n    private TextView sxthSlTab;\r\n    private TextView svnthSlTab;\r\n    private TextView ethSlTab;\r\n    private FrameLayout frthCountFrm;\r\n    private FrameLayout rdCountFrm;\r\n    private TextView frthCountTxt;\r\n    private TextView rdCountTxt;\r\n\r\n    //--------\r\n    private int userType = 0;\r\n    private FragmentManager fm;\r\n    private Boolean doubleBackToExitPressedOnce = false;\r\n    static Runnable runnable;\r\n\r\n    private int clickId = 0;\r\n    private ServiceNVehicleInterface serviceNVehicleInterface;\r\n    private String requestId = \"\", notiType = \"\";\r\n    public static String BaseFragment = \"\";\r\n\r\n    private ProgressDialog progressDialog;\r\n    private SignInRespoce signInRespoce;\r\n    public static int notificationCount = 0;\r\n    public static int chatCount = 0;\r\n    public static String countType = \"\";\r\n\r\n    {\r\n        countType = \"\";\r\n    }\r\n\r\n    public interface ServiceNVehicleInterface {\r\n        void onRefresh();\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        Bundle bundle = (Bundle) getIntent().getExtras();\r\n        if (bundle != null) {\r\n            requestId = \"\" + bundle.get(\"requestId\");\r\n            notiType = bundle.getString(\"NotifyType\");\r\n            try {\r\n                Log.e(\"requestId\", requestId);\r\n                Log.e(\"NotifyType\", notiType);\r\n            } catch (Exception e) {\r\n                Log.e(\"MainActivity\", e.getMessage());\r\n            }\r\n        }\r\n        if (requestId.equals(\"null\")) requestId = \"\";\r\n        userType = PreferenceConnector.readInteger(MainActivity.this, PreferenceConnector.UserType, 0);\r\n        signInRespoce = new Gson().fromJson(PreferenceConnector.readString(MainActivity.this, PreferenceConnector.userInfoJson, \"\"), SignInRespoce.class);\r\n        updateFirebaseToken();\r\n        initializeView();\r\n        drawerLayout.setScrimColor(Color.TRANSPARENT);\r\n        drawerLayout.addDrawerListener(new DrawerLayout.SimpleDrawerListener() {\r\n                                           @Override\r\n                                           public void onDrawerSlide(View drawerView, float slideOffset) {\r\n                                               //labelView.setVisibility(slideOffset > 0 ? View.VISIBLE : View.GONE);\r\n\r\n                                               // Scale the View based on current slide offset\r\n                                               final float diffScaledOffset = slideOffset * (1 - END_SCALE);\r\n                                               final float offsetScale = 1 - diffScaledOffset;\r\n                                               contentView.setScaleX(offsetScale);\r\n                                               contentView.setScaleY(offsetScale);\r\n\r\n                                               // Translate the View, accounting for the scaled width\r\n                                               final float xOffset = drawerView.getWidth() * slideOffset;\r\n                                               final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;\r\n                                               final float xTranslation = xOffset - xOffsetDiff;  //for left side drawer\r\n                                               // final float xTranslation = xOffsetDiff - xOffset; //for right side drawer\r\n                                               contentView.setTranslationX(xTranslation);\r\n                                           }\r\n\r\n                                           @Override\r\n                                           public void onDrawerClosed(View drawerView) {\r\n                                               //labelView.setVisibility(View.GONE);\r\n                                           }\r\n                                       }\r\n        );\r\n//from forground notification back\r\n        if (manageAfternotificationBack(bundle)) return;\r\n\r\n        //from BackGround Notification\r\n        manageBackGroundNotification();\r\n        chatCount = PreferenceConnector.readInteger(MainActivity.this, PreferenceConnector.chatCount, 0);\r\n        notificationCount = PreferenceConnector.readInteger(MainActivity.this, PreferenceConnector.notiCount, 0);\r\n        ;\r\n        if (notificationCount > 0) {\r\n            notiFrm.setVisibility(View.VISIBLE);\r\n            notiTxt.setText(\"\" + notificationCount);\r\n        }\r\n        if (chatCount > 0) {\r\n            if (userType == Constant.uerTypeConsumer) {\r\n                frthCountFrm.setVisibility(View.VISIBLE);\r\n                frthCountTxt.setText(\"\" + chatCount);\r\n            } else {\r\n                rdCountFrm.setVisibility(View.VISIBLE);\r\n                rdCountTxt.setText(\"\" + chatCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void manageBackGroundNotification() {\r\n        if (notiType != null) {\r\n            notificationCount = notificationCount + 1;\r\n            try {\r\n                switch (notiType) {\r\n                    case \"request\":\r\n                        clickId = R.id.secondTabLay;\r\n                        manageSndTabLay();\r\n                        break;\r\n                    case \"Start\":\r\n                    case \"Progress\":\r\n                    case \"Almost\":\r\n                    case \"End\":\r\n                    case \"Ask\":\r\n                    case \"payFirst\":\r\n                    case \"reminder\":\r\n                        clickId = R.id.fourthTabLay;\r\n                        manageFrthTabLay(\"pending\");\r\n                        break;\r\n                    case \"Quote\":\r\n                        clickId = R.id.secondTabLay;\r\n                        manageSndTabLay();\r\n                        break;\r\n                    case \"Accept\":\r\n                        clickId = R.id.fourthTabLay;\r\n                        manageFrthTabLay(\"pending\");\r\n                        break;\r\n                    case \"Review\":\r\n                    case \"paySecond\":\r\n                        clickId = R.id.thirdTabLay;\r\n                        manageFrthTabLay(\"complete\");\r\n                        break;\r\n                }\r\n            } catch (Exception e) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private boolean manageAfternotificationBack(Bundle bundle) {\r\n        try {\r\n            String go = bundle.getString(\"GO\");\r\n            if (go.equals(\"two\")) {\r\n                clickId = R.id.secondTabLay;\r\n                manageSndTabLay();\r\n            } else if (go.equals(\"four\")) {\r\n                clickId = R.id.fourthTabLay;\r\n                manageFrthTabLay(\"pending\");\r\n            } else if (go.equals(\"three\")) {\r\n                clickId = R.id.thirdTabLay;\r\n                manageRdTabLay(\"complete\");\r\n            } else if (go.equals(\"chat\")) {\r\n                if (userType == Constant.userTypeOwner) {\r\n                    clickId = R.id.rdSlTab;\r\n                    manageRdSlTab();\r\n                } else if (userType == Constant.uerTypeConsumer) {\r\n                    clickId = R.id.frthSlTab;\r\n                    manageFrthSlTab();\r\n                }\r\n            }\r\n            return true;\r\n        } catch (Exception e) {\r\n\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private void initializeView() {\r\n        footer = findViewById(R.id.footer);\r\n        contentView = findViewById(R.id.contentView);\r\n        navigationView = findViewById(R.id.navigationView);\r\n        drawerLayout = findViewById(R.id.drawerLayout);\r\n        menuBtn = findViewById(R.id.menuBtn);\r\n        menuBtn.setOnClickListener(this);\r\n        titleTxt = findViewById(R.id.titleTxt);\r\n        coOrdinateLay = findViewById(R.id.coOrdinateLay);\r\n        //tab\r\n        firstTabLay = findViewById(R.id.firstTabLay);\r\n        firstTabImage = findViewById(R.id.firstTabImage);\r\n        secondTabLay = findViewById(R.id.secondTabLay);\r\n        secondTabImage = findViewById(R.id.secondTabImage);\r\n        thirdTabLay = findViewById(R.id.thirdTabLay);\r\n        thirdTabImage = findViewById(R.id.thirdTabImage);\r\n        fourthTabLay = findViewById(R.id.fourthTabLay);\r\n        fourthTabImage = findViewById(R.id.fourthTabImage);\r\n        fifthTabLay = findViewById(R.id.fifthTabLay);\r\n        fifthTabImage = findViewById(R.id.fifthTabImage);\r\n\r\n        firstTabLay.setOnClickListener(this);\r\n        secondTabLay.setOnClickListener(this);\r\n        thirdTabLay.setOnClickListener(this);\r\n        fourthTabLay.setOnClickListener(this);\r\n        fifthTabLay.setOnClickListener(this);\r\n\r\n        fstTbVw = findViewById(R.id.fstTbVw);\r\n        ndTbVw = findViewById(R.id.ndTbVw);\r\n        rdTbVw = findViewById(R.id.rdTbVw);\r\n        frthTbVw = findViewById(R.id.frthTbVw);\r\n        fifthTbVw = findViewById(R.id.fifthTbVw);\r\n        //slide\r\n        fstSlTab = findViewById(R.id.fstSlTab);\r\n        sndSlTab = findViewById(R.id.sndSlTab);\r\n        rdSlTab = findViewById(R.id.rdSlTab);\r\n        frthSlTab = findViewById(R.id.frthSlTab);\r\n        fifthSlTab = findViewById(R.id.fifthSlTab);\r\n        sxthSlTab = findViewById(R.id.sxthSlTab);\r\n        svnthSlTab = findViewById(R.id.svnthSlTab);\r\n        ethSlTab = findViewById(R.id.ethSlTab);\r\n\r\n        rdCountFrm = findViewById(R.id.rdCountFrm);\r\n        rdCountTxt = findViewById(R.id.rdCountTxt);\r\n        frthCountFrm = findViewById(R.id.frthCountFrm);\r\n        frthCountTxt = findViewById(R.id.frthCountTxt);\r\n\r\n        notiFrm = findViewById(R.id.notiFrm);\r\n        notiTxt = findViewById(R.id.notiTxt);\r\n\r\n        fstSlTab.setOnClickListener(this);\r\n        sndSlTab.setOnClickListener(this);\r\n        rdSlTab.setOnClickListener(this);\r\n        frthSlTab.setOnClickListener(this);\r\n        fifthSlTab.setOnClickListener(this);\r\n        sxthSlTab.setOnClickListener(this);\r\n        svnthSlTab.setOnClickListener(this);\r\n        ethSlTab.setOnClickListener(this);\r\n        //\r\n\r\n        fm = getSupportFragmentManager();\r\n        progressDialog = new ProgressDialog(MainActivity.this);\r\n        initialUiByUserType();\r\n    }\r\n\r\n    private void initialUiByUserType() {\r\n        if (userType == Constant.userTypeOwner) {\r\n            initializeOwnerUi();\r\n        } else if (userType == Constant.uerTypeConsumer) {\r\n            initializeConsumerUi();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.menuBtn:\r\n                if (drawerLayout.isDrawerOpen(navigationView)) {\r\n                    drawerLayout.closeDrawer(navigationView);\r\n                } else {\r\n                    drawerLayout.openDrawer(navigationView);\r\n                }\r\n                break;\r\n            case R.id.firstTabLay:\r\n                if (clickId != R.id.firstTabLay) {\r\n                    clickId = R.id.firstTabLay;\r\n                    manageFirstTabLay();\r\n                }\r\n                break;\r\n            case R.id.secondTabLay:\r\n                if (clickId != R.id.secondTabLay) {\r\n                    clickId = R.id.secondTabLay;\r\n                    manageSndTabLay();\r\n                }\r\n                break;\r\n            case R.id.thirdTabLay:\r\n                if (clickId != R.id.thirdTabLay && clickId != R.id.fstSlTab) {\r\n                    clickId = R.id.thirdTabLay;\r\n                    manageRdTabLay(\"\");\r\n                }\r\n                break;\r\n            case R.id.fourthTabLay:\r\n                if (clickId != R.id.fourthTabLay) {\r\n                    clickId = R.id.fourthTabLay;\r\n                    manageFrthTabLay(\"pending\");\r\n                }\r\n                break;\r\n            case R.id.fifthTabLay:\r\n                if (clickId != R.id.fifthTabLay) {\r\n                    clickId = R.id.fifthTabLay;\r\n                    MainActivity.notificationCount = 0;\r\n                    notiFrm.setVisibility(View.GONE);\r\n                    manageFifthTabLay();\r\n                }\r\n                break;\r\n            case R.id.fstSlTab:\r\n                drawerLayout.closeDrawer(navigationView);\r\n                if (clickId != R.id.thirdTabLay && clickId != R.id.fstSlTab) {\r\n                    clickId = R.id.fstSlTab;\r\n                    manageFstSlTab();\r\n                }\r\n                break;\r\n            case R.id.sndSlTab:\r\n                drawerLayout.closeDrawer(navigationView);\r\n                if (clickId != R.id.sndSlTab) {\r\n                    clickId = R.id.sndSlTab;\r\n                    manageSndSlTab();\r\n                }\r\n                break;\r\n            case R.id.rdSlTab:\r\n                drawerLayout.closeDrawer(navigationView);\r\n                if (clickId != R.id.rdSlTab) {\r\n                    clickId = R.id.rdSlTab;\r\n                    manageRdSlTab();\r\n                }\r\n                break;\r\n            case R.id.frthSlTab:\r\n                drawerLayout.closeDrawer(navigationView);\r\n                if (clickId != R.id.frthSlTab) {\r\n                    clickId = R.id.frthSlTab;\r\n                    manageFrthSlTab();\r\n                }\r\n                break;\r\n            case R.id.fifthSlTab:\r\n                drawerLayout.closeDrawer(navigationView);\r\n                if (userType == Constant.uerTypeConsumer) {\r\n                    Intent emailIntent = new Intent(Intent.ACTION_SENDTO);\r\n                    emailIntent.setData(Uri.parse(\"mailto: sam_eskn@yahoo.com\"));\r\n                    startActivity(Intent.createChooser(emailIntent, \"Send feedback\"));\r\n                } else {\r\n                    if (clickId != R.id.fifthSlTab) {\r\n                        clickId = R.id.fifthSlTab;\r\n                        manageFifthSlTab();\r\n                    }\r\n                }\r\n                break;\r\n            case R.id.sxthSlTab:\r\n                drawerLayout.closeDrawer(navigationView);\r\n                if (userType == Constant.userTypeOwner) {\r\n                    Intent emailIntent = new Intent(Intent.ACTION_SENDTO);\r\n                    emailIntent.setData(Uri.parse(\"mailto: sam_eskn@yahoo.com\"));\r\n                    startActivity(Intent.createChooser(emailIntent, \"Send feedback\"));\r\n                } else {\r\n                    if (clickId != R.id.sxthSlTab) {\r\n                        clickId = R.id.sxthSlTab;\r\n                        manageSixSlTab();\r\n                    }\r\n                }\r\n                break;\r\n            case R.id.svnthSlTab:\r\n                drawerLayout.closeDrawer(navigationView);\r\n                if (clickId != R.id.svnthSlTab) {\r\n                    clickId = R.id.svnthSlTab;\r\n                    manageSvnSlTab();\r\n                }\r\n                break;\r\n            case R.id.ethSlTab:\r\n                /*drawerLayout.closeDrawer(navigationView);\r\n                if (clickId != R.id.ethSlTab) {\r\n                    clickId = R.id.ethSlTab;*/\r\n                manageEthSlTab();\r\n                // }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void initializeConsumerUi() {\r\n        titleTxt.setText(R.string.consumer_fst_tab);\r\n        fstSlTab.setText(getString(R.string.consumer_fst_sl_tab));\r\n        sndSlTab.setText(getString(R.string.consumer_snd_sl_tab));\r\n        rdSlTab.setText(getString(R.string.consumer_rd_sl_tab));\r\n        frthSlTab.setText(getString(R.string.consumer_frth_sl_tab));\r\n        fifthSlTab.setText(getString(R.string.consumer_fifth_sl_tab));\r\n        sxthSlTab.setText(getString(R.string.consumer_sxth_sl_tab));\r\n        svnthSlTab.setText(getString(R.string.consumer_svnth_sl_tab));\r\n        ethSlTab.setText(getString(R.string.consumer_eth_sl_tab));\r\n\r\n        firstTabImage.setImageResource(R.drawable.home);\r\n        secondTabImage.setImageResource(R.drawable.online_services);\r\n        thirdTabImage.setImageResource(R.drawable.profile);\r\n        fourthTabImage.setImageResource(R.drawable.my_services);\r\n\r\n        RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) fourthTabImage.getLayoutParams();\r\n        layoutParams.width = (int) getResources().getDimension(R.dimen._38sdp);\r\n        layoutParams.height = (int) getResources().getDimension(R.dimen._25sdp);\r\n        fourthTabImage.setLayoutParams(layoutParams);\r\n\r\n        fifthTabImage.setImageResource(R.drawable.bell);\r\n        fstTbVw.setVisibility(View.VISIBLE);\r\n\r\n        if (requestId.equals(\"\")) {\r\n            clickId = R.id.secondTabLay;\r\n            manageSndTabLay();\r\n        }\r\n    }\r\n\r\n    private void initializeOwnerUi() {\r\n        titleTxt.setText(R.string.owner_fst_tab);\r\n        fstSlTab.setText(getString(R.string.owner_fst_sl_tab));\r\n        sndSlTab.setText(getString(R.string.owner_snd_sl_tab));\r\n        rdSlTab.setText(getString(R.string.owner_rd_sl_tab));\r\n        if (PreferenceConnector.readBoolean(this, PreferenceConnector.IsBankAccAdd, true)) {\r\n            frthSlTab.setText(\"Edit Account Info\");\r\n        } else {\r\n            frthSlTab.setText(getString(R.string.owner_frth_sl_tab));\r\n        }\r\n        fifthSlTab.setText(getString(R.string.owner_fifth_sl_tab));\r\n        sxthSlTab.setText(getString(R.string.owner_sxth_sl_tab));\r\n        svnthSlTab.setText(getString(R.string.owner_svnth_sl_tab));\r\n        ethSlTab.setText(getString(R.string.owner_eth_sl_tab));\r\n\r\n        firstTabImage.setImageResource(R.drawable.home);\r\n        secondTabImage.setImageResource(R.drawable.online_jobs);\r\n\r\n        RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) secondTabImage.getLayoutParams();\r\n        layoutParams.width = (int) getResources().getDimension(R.dimen._38sdp);\r\n        layoutParams.height = (int) getResources().getDimension(R.dimen._25sdp);\r\n        secondTabImage.setLayoutParams(layoutParams);\r\n\r\n        thirdTabImage.setImageResource(R.drawable.profile);\r\n        fourthTabImage.setImageResource(R.drawable.my_jobs);\r\n        fifthTabImage.setImageResource(R.drawable.bell);\r\n        fstTbVw.setVisibility(View.VISIBLE);\r\n\r\n        if (requestId.equals(\"\")) {\r\n            clickId = R.id.secondTabLay;\r\n            manageSndTabLay();\r\n        }\r\n    }\r\n\r\n    //sliderClick\r\n    private void manageFstSlTab() {\r\n        tabLineHide();\r\n        drawerLayout.closeDrawer(navigationView);\r\n        rdTbVw.setVisibility(View.VISIBLE);\r\n        footer.setVisibility(View.VISIBLE);\r\n        BaseFragment = \"FragmentProfile\";\r\n        replaceFragment(FragmentProfile.newInstance(\"\"), false, R.id.fragmentPlace);\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_fst_sl_tab);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_fst_sl_tab);\r\n        }\r\n    }\r\n\r\n    private void manageSndSlTab() {\r\n\r\n        drawerLayout.closeDrawer(navigationView);\r\n        footer.setVisibility(View.GONE);\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_snd_sl_tab);\r\n            replaceFragment(new OnDevelopmentFragment(), false, R.id.fragmentPlace);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_snd_sl_tab);\r\n            replaceFragment(new FragmentNearby(), false, R.id.fragmentPlace);\r\n        }\r\n\r\n    }\r\n\r\n    private void manageRdSlTab() {\r\n        tabLineHide();\r\n        drawerLayout.closeDrawer(navigationView);\r\n        rdTbVw.setVisibility(View.VISIBLE);\r\n        footer.setVisibility(View.GONE);\r\n\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_rd_sl_tab);\r\n            BaseFragment = \"ChatFragment\";\r\n            rdCountFrm.setVisibility(View.GONE);\r\n            chatCount = 0;\r\n            PreferenceConnector.writeInteger(this, PreferenceConnector.chatCount, chatCount);\r\n            replaceFragment(new ChatFragment(), false, R.id.fragmentPlace);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_rd_sl_tab);\r\n            addFragment(new OnDevelopmentFragment(), false, R.id.fragmentPlace);\r\n        }\r\n    }\r\n\r\n    private void manageFrthSlTab() {\r\n        drawerLayout.closeDrawer(navigationView);\r\n        footer.setVisibility(View.GONE);\r\n\r\n        if (userType == Constant.userTypeOwner) {\r\n            if (PreferenceConnector.readBoolean(this, PreferenceConnector.IsBankAccAdd, true)) {\r\n                titleTxt.setText(\"Update Account Info\");\r\n            } else {\r\n                titleTxt.setText(R.string.owner_frth_sl_tab);\r\n            }\r\n\r\n            replaceFragment(new FragmentAddEditAccount(), false, R.id.fragmentPlace);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_frth_sl_tab);\r\n            BaseFragment = \"ChatFragment\";\r\n            frthCountFrm.setVisibility(View.GONE);\r\n            chatCount = 0;\r\n            PreferenceConnector.writeInteger(this, PreferenceConnector.chatCount, chatCount);\r\n            replaceFragment(new ChatFragment(), false, R.id.fragmentPlace);\r\n        }\r\n    }\r\n\r\n    private void manageFifthSlTab() {\r\n        drawerLayout.closeDrawer(navigationView);\r\n        footer.setVisibility(View.GONE);\r\n\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_fifth_sl_tab);\r\n            BaseFragment = \"FragmentPromoCode\";\r\n            replaceFragment(new FragmentPromoCode(), false, R.id.fragmentPlace);\r\n        } else {\r\n            clickId = R.id.fifthSlTab;\r\n            Intent emailIntent = new Intent(Intent.ACTION_SENDTO);\r\n            emailIntent.setData(Uri.parse(\"mailto: sam_eskn@yahoo.com\"));\r\n            startActivity(Intent.createChooser(emailIntent, \"Send feedback\"));\r\n        }\r\n    }\r\n\r\n    private void manageSixSlTab() {\r\n        drawerLayout.closeDrawer(navigationView);\r\n        footer.setVisibility(View.GONE);\r\n        addFragment(new OnDevelopmentFragment(), true, R.id.fragmentPlace);\r\n        if (userType == Constant.userTypeOwner) {\r\n            addFragment(new OnDevelopmentFragment(), true, R.id.fragmentPlace);\r\n            Intent emailIntent = new Intent(Intent.ACTION_SENDTO);\r\n            emailIntent.setData(Uri.parse(\"mailto: sam_eskn@yahoo.com\"));\r\n            startActivity(Intent.createChooser(emailIntent, \"Send feedback\"));\r\n\r\n            //startActivity(Intent.createChooser(intent, \"Send Email\"));\r\n\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_sxth_sl_tab);\r\n        }\r\n    }\r\n\r\n    private void manageSvnSlTab() {\r\n        drawerLayout.closeDrawer(navigationView);\r\n        footer.setVisibility(View.GONE);\r\n        replaceFragment(new FragmentTermsPolicies(), false, R.id.fragmentPlace);\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_svnth_sl_tab);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_svnth_sl_tab);\r\n        }\r\n    }\r\n\r\n    private void manageEthSlTab() {\r\n        doLogOut();\r\n    }\r\n\r\n    //tabBarClick\r\n    private void manageFirstTabLay() {\r\n        tabLineHide();\r\n        fstTbVw.setVisibility(View.VISIBLE);\r\n        replaceFragment(new FragmentFeed(), false, R.id.fragmentPlace);\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_fst_tab);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_fst_tab);\r\n        }\r\n    }\r\n\r\n    private void manageSndTabLay() {\r\n        tabLineHide();\r\n        ndTbVw.setVisibility(View.VISIBLE);\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_snd_tab);\r\n            RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) secondTabImage.getLayoutParams();\r\n            layoutParams.width = (int) getResources().getDimension(R.dimen._38sdp);\r\n            layoutParams.height = (int) getResources().getDimension(R.dimen._25sdp);\r\n            secondTabImage.setLayoutParams(layoutParams);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_snd_tab);\r\n        }\r\n        BaseFragment = \"OnlineJobsNServicesFragment\";\r\n        replaceFragment(OnlineJobsNServicesFragment.newInstance(requestId), false, R.id.fragmentPlace);\r\n        requestId = \"\";\r\n    }\r\n\r\n    public void manageRdTabLay(String state) {\r\n        clickId = R.id.thirdTabLay;\r\n        tabLineHide();\r\n        rdTbVw.setVisibility(View.VISIBLE);\r\n        BaseFragment = \"FragmentProfile\";\r\n        replaceFragment(FragmentProfile.newInstance(state), false, R.id.fragmentPlace);\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_rd_tab);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_rd_tab);\r\n        }\r\n\r\n    }\r\n\r\n    private void manageFrthTabLay(String state) {\r\n        tabLineHide();\r\n        frthTbVw.setVisibility(View.VISIBLE);\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_frth_tab);\r\n            BaseFragment = \"FragmentMyJobs\";\r\n            replaceFragment(FragmentMyJobs.newInstance(requestId, state), false, R.id.fragmentPlace);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_frth_tab);\r\n            RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) fourthTabImage.getLayoutParams();\r\n            layoutParams.width = (int) getResources().getDimension(R.dimen._38sdp);\r\n            layoutParams.height = (int) getResources().getDimension(R.dimen._25sdp);\r\n            fourthTabImage.setLayoutParams(layoutParams);\r\n            BaseFragment = \"FragmentMyServices\";\r\n            replaceFragment(FragmentMyServices.newInstance(requestId, state), false, R.id.fragmentPlace);\r\n        }\r\n        requestId = \"\";\r\n    }\r\n\r\n    private void manageFifthTabLay() {\r\n        tabLineHide();\r\n        fifthTbVw.setVisibility(View.VISIBLE);\r\n        notificationCount = 0;\r\n        PreferenceConnector.writeInteger(this, PreferenceConnector.notiCount, notificationCount);\r\n        BaseFragment = \"FragmentNotifications\";\r\n        replaceFragment(new FragmentNotifications(), false, R.id.fragmentPlace);\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_fifth_tab);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_fifth_tab);\r\n        }\r\n    }\r\n\r\n    private void tabLineHide() {\r\n        fstTbVw.setVisibility(View.GONE);\r\n        ndTbVw.setVisibility(View.GONE);\r\n        rdTbVw.setVisibility(View.GONE);\r\n        frthTbVw.setVisibility(View.GONE);\r\n        fifthTbVw.setVisibility(View.GONE);\r\n    }\r\n\r\n    public void replaceFragment(Fragment fragment, boolean addToBackStack, int containerId) {\r\n        String backStackName = fragment.getClass().getName();\r\n        boolean fragmentPopped = getFragmentManager().popBackStackImmediate(backStackName, 0);\r\n        int i = fm.getBackStackEntryCount();\r\n        while (i > 0) {\r\n            fm.popBackStackImmediate();\r\n            i--;\r\n        }\r\n        if (!fragmentPopped) {\r\n            FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();\r\n            //   transaction.setCustomAnimations(R.anim.slide_right_out, R.anim.slide_right_in);\r\n            transaction.replace(containerId, fragment, backStackName).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);\r\n            if (addToBackStack)\r\n                transaction.addToBackStack(backStackName);\r\n            transaction.commit();\r\n        }\r\n    }\r\n\r\n    public void addFragment(Fragment fragment, boolean addToBackStack, int containerId) {\r\n        String backStackName = fragment.getClass().getName();\r\n        boolean fragmentPopped = getFragmentManager().popBackStackImmediate(backStackName, 0);\r\n        if (!fragmentPopped) {\r\n            FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();\r\n            //   transaction.setCustomAnimations(R.anim.slide_right_out, R.anim.slide_right_in);\r\n            transaction.add(containerId, fragment, backStackName).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);\r\n            if (addToBackStack)\r\n                transaction.addToBackStack(backStackName);\r\n            transaction.commit();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        try {\r\n            if (fm.getBackStackEntryCount() > 0) {\r\n                int backStackEntryCount = fm.getBackStackEntryCount();\r\n                Fragment fragment = fm.getFragments().get(backStackEntryCount - 1);\r\n                if (fragment != null) {\r\n                    fragment.onResume();\r\n                }\r\n                fm.popBackStackImmediate();\r\n            } else {\r\n                Handler handler = new Handler();\r\n                if (!doubleBackToExitPressedOnce) {\r\n                    this.doubleBackToExitPressedOnce = true;\r\n                    Toast.makeText(this, \"Click again to exit\", Toast.LENGTH_SHORT).show();\r\n                    //Constant.snackbar(coOrdinateLay, \"Click again to exit\");\r\n                    handler.postDelayed(runnable = new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            doubleBackToExitPressedOnce = false;\r\n                        }\r\n                    }, 2000);\r\n                } else {\r\n                    handler.removeCallbacks(runnable);\r\n                    super.onBackPressed();\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            Log.e(\"TAG\", \"onBackPressed: \" + e.getMessage().toString());\r\n\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        MainActivity.this.registerReceiver(receiver, new IntentFilter(\"NOTIFICATIONCOUNT\"));\r\n        if (userType == Constant.uerTypeConsumer) {\r\n            getMyCars();\r\n        } else if (userType == Constant.userTypeOwner) {\r\n            getServices();\r\n        }\r\n    }\r\n\r\n    public void getMyCars() {\r\n        if (Constant.isNetworkAvailable(this, coOrdinateLay)) {\r\n\r\n            StringRequest stringRequest = new StringRequest(Request.Method.POST, Constant.BASE_URL + Constant.getMyCarUrl,\r\n                    new Response.Listener<String>() {\r\n                        @Override\r\n                        public void onResponse(String response) {\r\n\r\n                            System.out.println(\"#\" + response);\r\n                            Log.e(\"BRAND\", \"onResponse: \" + response);\r\n                            JSONObject result = null;\r\n                            try {\r\n                                result = new JSONObject(response);\r\n                                String status = result.getString(\"status\");\r\n                                String message = result.getString(\"message\");\r\n                                if (status.equalsIgnoreCase(\"success\")) {\r\n          /*                          GetMyCarResponce getMyCarResponce = gson.fromJson(response, GetMyCarResponce.class);*/\r\n                                    PreferenceConnector.writeString(MainActivity.this, PreferenceConnector.myCarListJson, response);\r\n                                    if (serviceNVehicleInterface != null)\r\n                                        serviceNVehicleInterface.onRefresh();\r\n                                } else if (status.equalsIgnoreCase(\"authFail\")) {\r\n                                    Constant.showLogOutDialog(MainActivity.this);\r\n                                } else if (status.equalsIgnoreCase(\"FAIL\")) {\r\n                                    PreferenceConnector.writeString(MainActivity.this, PreferenceConnector.myCarListJson, response);\r\n                                    if (serviceNVehicleInterface != null)\r\n                                        serviceNVehicleInterface.onRefresh();\r\n                                }\r\n                            } catch (JSONException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n\r\n                        }\r\n                    },\r\n                    new Response.ErrorListener() {\r\n                        @Override\r\n                        public void onErrorResponse(VolleyError error) {\r\n                            Constant.errorHandle(error, MainActivity.this);\r\n                        }\r\n                    }) {\r\n\r\n                @Override\r\n                public Map<String, String> getHeaders() throws AuthFailureError {\r\n                    Map<String, String> header = new HashMap<>();\r\n                    header.put(\"authToken\", PreferenceConnector.readString(MainActivity.this, PreferenceConnector.AuthToken, \"\"));\r\n                    return header;\r\n                }\r\n\r\n\r\n               /* @Override\r\n                public byte[] getBody() throws AuthFailureError {\r\n                    Map<String, String> params = new HashMap<>();\r\n                    params.put(\"carId\", carId);\r\n                    String string = new JSONObject(params).toString();\r\n                    return string.getBytes();\r\n                }*/\r\n\r\n                /*@Override\r\n                public String getBodyContentType() {\r\n                    return \"application/json; charset=\" + getParamsEncoding();\r\n                }*/\r\n            };\r\n            stringRequest.setRetryPolicy(new DefaultRetryPolicy(\r\n                    30000,\r\n                    DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                    DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n            VolleySingleton.getInstance(MainActivity.this).addToRequestQueue(stringRequest);\r\n        }\r\n    }\r\n\r\n    public void doLogOut() {\r\n        if (Constant.isNetworkAvailable(this, coOrdinateLay)) {\r\n            progressDialog.show();\r\n            StringRequest stringRequest = new StringRequest(Request.Method.POST, Constant.BASE_URL + Constant.logOutUrl,\r\n                    new Response.Listener<String>() {\r\n                        @Override\r\n                        public void onResponse(String response) {\r\n                            progressDialog.dismiss();\r\n                            System.out.println(\"#\" + response);\r\n                            Log.e(\"BRAND\", \"onResponse: \" + response);\r\n                            JSONObject result = null;\r\n                            try {\r\n                                result = new JSONObject(response);\r\n                                String status = result.getString(\"status\");\r\n                                String message = result.getString(\"message\");\r\n                                if (status.equalsIgnoreCase(\"success\")) {\r\n                                    drawerLayout.closeDrawer(navigationView);\r\n                                    footer.setVisibility(View.GONE);\r\n                                    FirebaseDatabase.getInstance()\r\n                                            .getReference()\r\n                                            .child(Constant.ARG_USERS)\r\n                                            .child(String.valueOf(signInRespoce.getData().get_id()))\r\n                                            .child(\"firebaseToken\").setValue(\"\").addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<Void> task) {\r\n                                            Constant.logout(MainActivity.this);\r\n                                        }\r\n                                    });\r\n                                } else if (status.equalsIgnoreCase(\"authFail\")) {\r\n                                    drawerLayout.closeDrawer(navigationView);\r\n                                    footer.setVisibility(View.GONE);\r\n                                    Constant.logout(MainActivity.this);\r\n                                } else {\r\n                                    drawerLayout.closeDrawer(navigationView);\r\n                                    footer.setVisibility(View.GONE);\r\n                                    Constant.logout(MainActivity.this);\r\n                                }\r\n                            } catch (JSONException e) {\r\n                                e.printStackTrace();\r\n                                progressDialog.dismiss();\r\n                            }\r\n\r\n                        }\r\n                    },\r\n                    new Response.ErrorListener() {\r\n                        @Override\r\n                        public void onErrorResponse(VolleyError error) {\r\n                            progressDialog.dismiss();\r\n                            Constant.errorHandle(error, MainActivity.this);\r\n                        }\r\n                    }) {\r\n\r\n                @Override\r\n                public Map<String, String> getHeaders() throws AuthFailureError {\r\n                    Map<String, String> header = new HashMap<>();\r\n                    header.put(\"authToken\", PreferenceConnector.readString(MainActivity.this, PreferenceConnector.AuthToken, \"\"));\r\n                    return header;\r\n                }\r\n\r\n\r\n               /* @Override\r\n                public byte[] getBody() throws AuthFailureError {\r\n                    Map<String, String> params = new HashMap<>();\r\n                    params.put(\"carId\", carId);\r\n                    String string = new JSONObject(params).toString();\r\n                    return string.getBytes();\r\n                }*/\r\n\r\n                /*@Override\r\n                public String getBodyContentType() {\r\n                    return \"application/json; charset=\" + getParamsEncoding();\r\n                }*/\r\n            };\r\n            stringRequest.setRetryPolicy(new DefaultRetryPolicy(\r\n                    30000,\r\n                    DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                    DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n            VolleySingleton.getInstance(MainActivity.this).addToRequestQueue(stringRequest);\r\n        }\r\n    }\r\n\r\n    public void getServices() {\r\n        if (Constant.isNetworkAvailable(this, coOrdinateLay)) {\r\n            StringRequest stringRequest = new StringRequest(Request.Method.POST, Constant.BASE_URL + Constant.getServicesUrl,\r\n                    new Response.Listener<String>() {\r\n                        @Override\r\n                        public void onResponse(String response) {\r\n                            System.out.println(\"#\" + response);\r\n                            Log.e(\"MyServices\", \"onResponse: \" + response);\r\n                            JSONObject result = null;\r\n                            try {\r\n                                result = new JSONObject(response);\r\n                                String status = result.getString(\"status\");\r\n                                String message = result.getString(\"message\");\r\n                                if (status.equalsIgnoreCase(\"success\")) {\r\n                                  /*  AddServicesResponce addServicesResponce = gson.fromJson(response, AddServicesResponce.class);*/\r\n                                    PreferenceConnector.writeString(MainActivity.this, PreferenceConnector.myServiceListJson, response);\r\n                                    if (serviceNVehicleInterface != null)\r\n                                        serviceNVehicleInterface.onRefresh();\r\n\r\n                                } else if (status.equalsIgnoreCase(\"authFail\")) {\r\n                                    Constant.showLogOutDialog(MainActivity.this);\r\n                                } else {\r\n                                    // Constant.snackbar(coOrdinateLay, message);\r\n                                }\r\n                            } catch (JSONException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n\r\n                        }\r\n                    },\r\n                    new Response.ErrorListener() {\r\n                        @Override\r\n                        public void onErrorResponse(VolleyError error) {\r\n                            Constant.errorHandle(error, MainActivity.this);\r\n                        }\r\n                    }) {\r\n\r\n                @Override\r\n                public Map<String, String> getHeaders() throws AuthFailureError {\r\n                    Map<String, String> header = new HashMap<>();\r\n                    header.put(\"authToken\", PreferenceConnector.readString(MainActivity.this, PreferenceConnector.AuthToken, \"\"));\r\n                    return header;\r\n                }\r\n\r\n            };\r\n            stringRequest.setRetryPolicy(new DefaultRetryPolicy(\r\n                    30000,\r\n                    DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                    DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n            VolleySingleton.getInstance(MainActivity.this).addToRequestQueue(stringRequest);\r\n        }\r\n    }\r\n\r\n    public void setListner(ServiceNVehicleInterface serviceNVehicleInterface) {\r\n        this.serviceNVehicleInterface = serviceNVehicleInterface;\r\n    }\r\n\r\n    private void updateFirebaseToken() {\r\n        ChatUserBean chatUserBean = new ChatUserBean();\r\n        chatUserBean.email = signInRespoce.getData().getEmail();\r\n        chatUserBean.firebaseId = String.valueOf(signInRespoce.getData().get_id());\r\n        chatUserBean.firebaseToken = signInRespoce.getData().getDeviceToken();\r\n        chatUserBean.name = signInRespoce.getData().getUserName();\r\n        chatUserBean.profilePic = signInRespoce.getData().getProfileImage();\r\n        chatUserBean.uid = String.valueOf(signInRespoce.getData().get_id());\r\n        FirebaseDatabase.getInstance()\r\n                .getReference()\r\n                .child(Constant.ARG_USERS)\r\n                .child(String.valueOf(signInRespoce.getData().get_id()))\r\n                .setValue(chatUserBean).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public void manageSndTabAfterPayment() {\r\n        clickId = R.id.secondTabLay;\r\n        tabLineHide();\r\n        ndTbVw.setVisibility(View.VISIBLE);\r\n        footer.setVisibility(View.VISIBLE);\r\n        if (userType == Constant.userTypeOwner) {\r\n            titleTxt.setText(R.string.owner_snd_tab);\r\n            RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) secondTabImage.getLayoutParams();\r\n            layoutParams.width = (int) getResources().getDimension(R.dimen._38sdp);\r\n            layoutParams.height = (int) getResources().getDimension(R.dimen._25sdp);\r\n            secondTabImage.setLayoutParams(layoutParams);\r\n        } else {\r\n            titleTxt.setText(R.string.consumer_snd_tab);\r\n        }\r\n        BaseFragment = \"OnlineJobsNServicesFragment\";\r\n        replaceFragment(OnlineJobsNServicesFragment.newInstance(requestId), false, R.id.fragmentPlace);\r\n        requestId = \"\";\r\n    }\r\n\r\n    private BroadcastReceiver receiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            countType = intent.getStringExtra(Constant.COUNTYPE);\r\n            if (countType.equals(\"chatCount\")) {\r\n                if (!MainActivity.BaseFragment.equals(\"ChatFragment\")) {\r\n                    if (userType == Constant.uerTypeConsumer) {\r\n                        frthCountFrm.setVisibility(View.VISIBLE);\r\n                        frthCountTxt.setText(\"\" + chatCount);\r\n                    } else {\r\n                        rdCountFrm.setVisibility(View.VISIBLE);\r\n                        rdCountTxt.setText(\"\" + chatCount);\r\n                    }\r\n                }\r\n            } else {\r\n                if (!MainActivity.BaseFragment.equals(\"FragmentNotifications\")) {\r\n                    notiFrm.setVisibility(View.VISIBLE);\r\n                    notiTxt.setText(\"\" + notificationCount);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        unregisterWifiReceiver();\r\n    }\r\n\r\n    private void unregisterWifiReceiver() {\r\n        MainActivity.this.unregisterReceiver(receiver);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cara2v/ui/activity/MainActivity.java	(date 1528264846000)
+++ app/src/main/java/com/cara2v/ui/activity/MainActivity.java	(date 1560964277656)
@@ -73,6 +73,7 @@
     private TextView titleTxt;
     private CoordinatorLayout coOrdinateLay;
 
+
     //tab
     private RelativeLayout firstTabLay;
     private ImageView firstTabImage;
